#ifndef @ModelName@_CXXVERTICES_H
#define @ModelName@_CXXVERTICES_H

#include "concatenate.hpp"
#include "cxx_qft_generic_vertices.hpp"
#include "numerics2.hpp"
#include "wrappers.hpp"

#define INPUTPARAMETER(p) context.model.get_input().p
#define MODELPARAMETER(p) context.model.get_##p()
#define DERIVEDPARAMETER(p) context.model.p()
#define PHASE(p) context.model.get_##p()

namespace flexiblesusy {

namespace cxx_qft {

@CXXDiagrams_VertexData@

@CXXDiagrams_Vertices@

namespace detail {
@CXXDiagrams_UnitCharge@
@CXXDiagrams_StrongCoupling@
} // namespace detail

static double unit_charge(const EvaluationContext& context)
{
   return -(detail::unit_charge(context).left().real() /
            fields::Electron::electric_charge);
}

static double strong_coupling(const EvaluationContext& context)
{
   return detail::strong_coupling(context).left().real();
}

} // namespace cxx_qft

} // namespace flexiblesusy

#undef INPUTPARAMETER
#undef MODELPARAMETER
#undef DERIVEDPARAMETER
#undef PHASE

#endif
