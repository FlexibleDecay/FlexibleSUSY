#ifndef FS_CXX_QFT_H
#define FS_CXX_QFT_H

#include "../@ModelName@_mass_eigenstates.hpp"

#include "@ModelName@_fields.hpp"

namespace flexiblesusy {
namespace cxx_qft
{
using mass_eigenstates = @ModelName@_mass_eigenstates;

struct EvaluationContext {
  const mass_eigenstates& model;

  EvaluationContext( const mass_eigenstates &m )
  : model( m ) {}

  template<class Field>
  double mass(const typename field_indices<Field>::type& indices) const
  {
    using CleanField = typename remove_lorentz_conjugation<Field>::type;
    return mass_impl<CleanField>(indices);
  }

private:
  template<class Field>
  double mass_impl(const typename field_indices<Field>::type& indices) const;
};

@CXXDiagrams_MassFunctions@
}
}

#include "@ModelName@_vertices.hpp"

#endif

