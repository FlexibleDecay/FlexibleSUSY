
list(APPEND LIBFLEXI_SRC
  "betafunction.cpp"
  "build_info.cpp"
  "bvp_solver_problems.cpp"
  "ckm.cpp"
  "command_line_options.cpp"
  "composite_convergence_tester.cpp"
  "database.cpp"
  "dilog.cpp"
  "dilogc.f"
  "effective_couplings.cpp"
  "global_thread_pool.cpp"
  "gm2calc_interface.cpp"
  "gsl_utils.cpp"
  "gsl_vector.cpp"
  "lowe.cpp"
  "sfermions.cpp"
  "mssm_twoloop_as.cpp"
  "mssm_twoloop_mb.cpp"
  "mssm_twoloop_mt.cpp"
  "mssm_twoloop_mtau.cpp"
  "mssm_twoloophiggs.cpp"
  "mssm_twoloophiggs_impl.f"
  "nmssm_twoloophiggs.cpp"
  "nmssm2loop.f"
  "numerics.cpp"
  "numerics2.cpp"
  "physical_input.cpp"
  "pmns.cpp"
  "problems.cpp"
  "pv.cpp"
  "rkf_integrator.cpp"
  "scan.cpp"
  "slha_io.cpp"
  "sm_threeloop_as.cpp"
  "sm_threeloophiggs.cpp"
  "sm_twoloophiggs.cpp"
  "spectrum_generator_problems.cpp"
  "spectrum_generator_settings.cpp"
  "splitmssm_threeloophiggs.cpp"
  "splitmssm_thresholds.cpp"
  "standard_model.cpp"
  "standard_model_effective_couplings.cpp"
  "standard_model_physical.cpp"
  "standard_model_two_scale_convergence_tester.cpp"
  "standard_model_two_scale_low_scale_constraint.cpp"
  "standard_model_two_scale_model.cpp"
  "string_utils.cpp"
  "threshold_corrections.cpp"
  "threshold_loop_functions.cpp"
  "weinberg_angle.cpp"
  "wrappers.cpp"
)

list(APPEND LIBFLEXI_HDR
  "array_view.hpp"
  "basic_rk_integrator.hpp"
  "betafunction.hpp"
  "build_info.hpp"
  "bvp_solver_problems.hpp"
  "cextensions.hpp"
  "ckm.hpp"
  "command_line_options.hpp"
  "composite_convergence_tester.hpp"
  "compound_constraint.hpp"
  "constraint.hpp"
  "convergence_tester.hpp"
  "convergence_tester_drbar.hpp"
  "coupling_monitor.hpp"
  "database.hpp"
  "derivative.hpp"
  "dilog.hpp"
  "effective_couplings.hpp"
  "eigen_utils.hpp"
  "eigen_tensor.hpp"
  "error.hpp"
  "ew_input.hpp"
  "ewsb_solver.hpp"
  "fixed_point_iterator.hpp"
  "functors.hpp"
  "global_thread_pool.hpp"
  "gm2calc_interface.hpp"
  "gsl.hpp"
  "gsl_utils.hpp"
  "gsl_vector.hpp"
  "loop_corrections.hpp"
  "if.hpp"
  "initial_guesser.hpp"
  "linalg2.hpp"
  "logger.hpp"
  "lowe.h"
  "mathlink_utils.hpp"
  "minimizer.hpp"
  "model.hpp"
  "mssm_twoloop_as.hpp"
  "mssm_twoloop_mb.hpp"
  "mssm_twoloop_mt.hpp"
  "mssm_twoloop_mtau.hpp"
  "mssm_twoloophiggs.h"
  "mssm_twoloophiggs.hpp"
  "nmssm_twoloophiggs.hpp"
  "nmssm2loop.h"
  "numerics.h"
  "numerics2.hpp"
  "physical_input.hpp"
  "pmns.hpp"
  "pp_map.hpp"
  "problems.hpp"
  "pv.hpp"
  "raii.hpp"
  "rg_flow.hpp"
  "rk.hpp"
  "rkf_integrator.hpp"
  "root_finder.hpp"
  "scan.hpp"
  "sfermions.hpp"
  "single_scale_constraint.hpp"
  "single_scale_matching.hpp"
  "slha_io.hpp"
  "sm_threeloop_as.hpp"
  "sm_threeloophiggs.hpp"
  "sm_twoloophiggs.hpp"
  "splitmssm_threeloophiggs.hpp"
  "splitmssm_thresholds.hpp"
  "spectrum_generator_problems.hpp"
  "spectrum_generator_settings.hpp"
  "standard_model.hpp"
  "standard_model_convergence_tester.hpp"
  "standard_model_effective_couplings.hpp"
  "standard_model_low_scale_constraint.hpp"
  "standard_model_physical.hpp"
  "standard_model_two_scale_convergence_tester.hpp"
  "standard_model_two_scale_low_scale_constraint.hpp"
  "standard_model_two_scale_model.hpp"
  "string_utils.hpp"
  "sum.hpp"
  "thread_pool.hpp"
  "threshold_corrections.hpp"
  "threshold_loop_functions.hpp"
  "weinberg_angle.hpp"
  "which.hpp"
  "wrappers.hpp"
)

add_library(flexisusy ${LIBFLEXI_SRC})

target_link_libraries(flexisusy Eigen3::Eigen)
target_link_libraries(flexisusy config)

add_library(FlexibleSUSY::flexisusy ALIAS flexisusy)
